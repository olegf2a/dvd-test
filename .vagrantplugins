class Command < Vagrant.plugin("2", :command)
  def execute
    # Execute the actual SSH
    with_target_vms(nil, single_target: true) do |vm|
      cmd = command + " " + @argv.join(" ")
      ssh_opts = {extra_args: ['-q']}

      @logger.debug("Executing single command on remote machine: #{cmd}")
      env = vm.action(:ssh_run, ssh_opts: ssh_opts, ssh_run_command: cmd)

      # Exit with the exit status of the command or a 0 if we didn't
      # get one.
      exit_status = env[:ssh_run_exit_status] || 0
      return exit_status
    end
  end
end


class DjangoManageCommand < Command
  def self.synopsis
    'executes a Django manage.py command'
  end

  def command
    'python3 /vagrant/server/manage.py'
  end
end


class PythonProspectorCommand < Command
  def self.synopsis
    'performs static analysis of Python code'
  end

  def command
    'prospector -u django -p /vagrant/server'
  end
end


class RunserverCommand < Command
  def self.synopsis
    'starts a lightweight Web server for development and also serves static files'
  end

  def command
    'python3 /vagrant/server/manage.py runserver 0.0.0.0:8000'
  end
end


class Plugin < Vagrant.plugin("2")
  name "Additional Vagrant commands"

  command("django-manage") do
    DjangoManageCommand
  end

  command("python-prospector") do
    PythonProspectorCommand
  end

  command("runserver") do
    RunserverCommand
  end
end
